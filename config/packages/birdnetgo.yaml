###############################################################################
#   @author         :   Simplemice
#   @date           :   27/01/2024
#   @package        :   BirdNet-Go
#   @description    :   A Collection of Notification Scripts and Configs.
###############################################################################

template:
  - trigger:
      - platform: mqtt
        topic: "birdnet"
      - platform: time
        at: "00:00:00"
        id: reset
    sensor:
      - unique_id: c893533c-3c06-4ebe-a5bb-da833da0a947
        name: BirdNET-Go Events
        state: "{{ today_at(trigger.payload_json.Time) }}"
        attributes:
          bird_events: >
            {% if trigger.id == 'reset' %}
              {{ [] }}
            {% else %}
              {% set time = trigger.payload_json.Time %}
              {% set name = trigger.payload_json.CommonName %}
              {% set confidence = trigger.payload_json.Confidence|round(2) * 100 ~ '%' %}
              {% set current = this.attributes.get('bird_events', []) %}
              {% set new = dict(time=time, name=name, confidence=confidence description= Wikipedia(name)) %}
              {{ current + [new] }}
            {% endif %}

# Configuration for history_stats
sensor:
  - platform: history_stats
    name: Monthly Bird Detection
    entity_id: sensor.birdnet_go_events
    state: "on" # assuming the sensor.birdnet_go_events is set to 'on' when a bird is detected
    type: count
    start: "{{ now().replace(day=1).replace(hour=0).replace(minute=0).replace(second=0) }}"
    end: "{{ now() }}"

  - platform: sql
    db_url: mysql://!secret db_user:!secret db_password@192.168.3.7/BirdDB
    queries:
      - name: Monthly Bird Detections
        query: >
          SELECT name, COUNT(*) AS count
          FROM bird_detections
          WHERE TIME >= DATE_SUB(NOW(), INTERVAL 1 MONTH)
          GROUP BY name;
