###############################################################################
#   @author         :   Simplemice
#   @date           :   27/01/2024
#   @package        :   BirdNet-Go
#   @description    :   A Collection of Notification Scripts and Configs.
###############################################################################

template:
  - trigger:
      - platform: mqtt
        topic: "birdnet"
      - platform: time
        at: "00:00:00"
        id: reset
    sensor:
      - unique_id: c893533c-3c06-4ebe-a5bb-da833da0a947
        name: BirdNET-Go Events
        state: "{{ today_at(trigger.payload_json.Time) }}"
        attributes:
          bird_events: >
            {% if trigger.id == 'reset' %}
              {{ [] }}
            {% else %}
              {% set time = trigger.payload_json.Time %}
              {% set name = trigger.payload_json.CommonName %}
              {% set confidence = trigger.payload_json.Confidence|round(2) * 100 ~ '%' %}
              {% set current = this.attributes.get('bird_events', []) %}
              {% set new = dict(time=time, name=name, confidence=confidence) %}
              {{ current + [new] }}
            {% endif %}

sensor:
  - platform: template
    sensors:
      bird_wikipedia_page:
        value_template: >
          {% set last_bird_event = state_attr('sensor.birdnet_go_events', 'bird_events') | sort(attribute='time', reverse=true) | first %}
          {{ 'https://en.wikipedia.org/wiki/' ~ last_bird_event.name | replace(' ', '_') }}
  - platform: command_line
    name: bird_image_url
    command: "echo ''"

automation:
  - alias: Fetch bird image
    trigger:
      platform: state
      entity_id: sensor.bird_wikipedia_page
    action:
      - service: python_script.fetch_bird_image
        data:
          url: "{{ states('sensor.bird_wikipedia_page') }}"

camera:
  - platform: generic
    still_image_url: "{{ states('sensor.bird_image_url') }}"
    name: dynamic_bird_camera
