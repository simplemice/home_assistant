###############################################################################
#   @author         :   Simplemice
#   @date           :   27/01/2024
#   @package        :   Lights
#   @description    :   Lights automations.
###############################################################################

sensor:
  #  - platform: template
  #    sensors:
  #      lights_runtime:
  #        unique_id: lights_runtime
  #        friendly_name: "Lights Runtime Today"
  #        unit_of_measurement: "h"
  #        value_template: "{{ (states('sensor.lights_runtime_today') | float + states('sensor.ambient_runtime_today') | float) }}"
  #        attribute_templates:
  #          value: "{{ (60 * (states('sensor.lights_runtime_today') | float + states('sensor.ambient_runtime_today') | float)) | int }}"

  - platform: template
    sensors:
      lights_runtime:
        unique_id: lights_runtime
        friendly_name: "Lights Runtime Today"
        unit_of_measurement: "h"
        value_template: >
          {% if states('sensor.lights_runtime_today') != 'unknown' and states('sensor.ambient_runtime_today') != 'unknown' %}
            {{ ((states('sensor.lights_runtime_today') | float) + (states('sensor.ambient_runtime_today') | float)) }}
          {% else %}
            0
          {% endif %}
        attribute_templates:
          value: >
            {% if states('sensor.lights_runtime_today') != 'unknown' and states('sensor.ambient_runtime_today') != 'unknown' %}
              {{ (60 * ((states('sensor.lights_runtime_today') | float) + (states('sensor.ambient_runtime_today') | float))) | int }}
            {% else %}
              0
            {% endif %}

  - platform: history_stats
    name: lights_runtime_today
    unique_id: lights_runtime_today
    entity_id: light.all_lights
    state: "on"
    type: time
    end: "{{ now().replace(hour=9, minute=0, second=0) }}"
    duration:
      hours: 24

  - platform: history_stats
    name: ambient_runtime_today
    unique_id: ambient_runtime_today
    entity_id: light.all_ambient
    state: "on"
    type: time
    end: "{{ now().replace(hour=9, minute=0, second=0) }}"
    duration:
      hours: 24

utility_meter:
  monthly_light:
    source: sensor.lights_runtime
    unique_id: monthly_light
    name: Monthly Lights
    cycle: monthly

  daily_light:
    source: sensor.lights_runtime
    unique_id: daily_lights
    name: Daily Lights
    cycle: daily

light:
  - platform: group
    name: "All Lights"
    entities:
      - light.porch_bulb
      - light.closet_lamp
  - platform: group
    name: "Camera Night Light"
    entities:
      - light.garage_camera_light
      - light.kitchen_power_strip_switch
  - platform: group
    name: "All Ambient"
    entities:
      - light.downstair_kitchen_ambient
      - light.livingroom_closet_ambient
      - light.kitchen_closet_ambient
      - light.wall_ambient
  - platform: group
    name: "Kitchen Ambient"
    entities:
      - light.downstair_kitchen_ambient
      - light.kitchen_closet_ambient

input_boolean:
  lights_automation:
    name: "Lights Auto Mode"
    icon: mdi:ceiling-light-multiple
  adaptive_lights_night:
    name: "Adaptive Lights Night Mode"
    icon: hue:scene-natural-light

automation:
  - id: 68bf8f1c-19db-46ae-8d7e-84657779b35a
    alias: Adaptive Light Automation
    description: ""
    trigger:
      - platform: sun
        event: sunrise
        offset: 0
        id: sunrise
      - platform: sun
        event: sunset
        offset: 0
        id: sunset
    condition: []
    action:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - sunrise
            sequence:
              - service: switch.turn_off
                target:
                  entity_id:
                    - switch.adaptive_lighting_garage
                data: {}
          - conditions:
              - condition: trigger
                id:
                  - sunset
            sequence:
              - service: switch.turn_on
                target:
                  entity_id:
                    - switch.adaptive_lighting_garage
                data: {}
    mode: restart
