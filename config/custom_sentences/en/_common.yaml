language: "en"
responses:
  errors:
    # General errors
    no_intent: "Sorry, I couldn't understand that"
    handle_error: "An unexpected error occurred"

    # Errors for when user is not logged in
    no_area: "Sorry, I am not aware of any area called {{ area }}"
    no_domain: "Sorry, I am not aware of any {{ domain }}"
    no_domain_in_area: "Sorry, I am not aware of any {{ domain }} in the {{ area }} area"
    no_device_class: "Sorry, I am not aware of any {{ device_class }}"
    no_device_class_in_area: "Sorry, I am not aware of any {{ device_class }} in the {{ area }} area"
    no_entity: "Sorry, I am not aware of any device called {{ entity }}"
    no_entity_in_area: "Sorry, I am not aware of any device called {{ entity }} in the {{ area }} area"

    # Errors for when user is logged in and we can give more information
    no_entity_exposed: "Sorry, {{ entity }} is not exposed"
    no_entity_in_area_exposed: "Sorry, {{ entity }} in the {{ area }} area is not exposed"
    no_domain_exposed: "Sorry, no {{ domain }} is exposed"
    no_domain_in_area_exposed: "Sorry, no {{ domain }} in the {{ area }} area is exposed"
    no_device_class_exposed: "Sorry, no {{ device_class }} is exposed"
    no_device_class_in_area_exposed: "Sorry, no {{ device_class }} in the {{ area }} area is exposed"

    # Used when multiple (exposed) devices have the same name
    duplicate_entities: "Sorry, there are multiple devices called {{ entity }}"
    duplicate_entities_in_area: "Sorry, there are multiple devices called {{ entity }} in the {{ area }} area"
lists:
  color:
    values:
      - "white"
      - "black"
      - "red"
      - "orange"
      - "yellow"
      - "green"
      - "blue"
      - "purple"
      - "brown"
      - "pink"
      - "turquoise"
  brightness:
    range:
      type: "percentage"
      from: 0
      to: 100
  temperature:
    range:
      type: "temperature"
      from: 0
      to: 100
  temperature_unit:
    values:
      - "celsius"
      - in: "c"
        out: "celsius"
      - "fahrenheit"
      - in: "f"
        out: "fahrenheit"
  brightness_level:
    values:
      - in: (max|maximum|highest)
        out: 100
      - in: (minimum|lowest)
        out: 1
  on_off_states:
    values:
      - in: "on"
        out: "on"
      - in: "off"
        out: "off"
  on_off_domains:
    values:
      - in: light[s]
        out: light
      - in: fan[s]
        out: fan
      - in: switch[es]
        out: switch
  cover_states:
    values:
      - in: "open"
        out: "open"
      - in: "closed"
        out: "closed"
      - in: "opening"
        out: "opening"
      - in: "closing"
        out: "closing"
  cover_classes:
    values:
      - in: awning[s]
        out: awning
      - in: blind[s]
        out: blind
      - in: curtain[s]
        out: curtain
      - in: door[s]
        out: door
      - in: garage door[s]
        out: garage
      - in: gate[s]
        out: gate
      - in: shade[s]
        out: shade
      - in: shutter[s]
        out: shutter
      - in: window[s]
        out: window
  lock_states:
    values:
      - in: "locked"
        out: "locked"
      - in: "unlocked"
        out: "unlocked"

  # binary_sensor
  bs_battery_states:
    values:
      - in: "low"
        out: "on"
      - in: "normal"
        out: "off"

  bs_battery_charging_states:
    values:
      - in: "charging"
        out: "on"
      - in: "not charging"
        out: "off"

  bs_carbon_monoxide_states:
    values:
      - in: "(detected|triggered|on)"
        out: "on"
      - in: "clear"
        out: "off"

  bs_cold_states:
    values:
      - in: "cold"
        out: "on"
      - in: "normal"
        out: "off"

  bs_connectivity_states:
    values:
      - in: "connected"
        out: "on"
      - in: "disconnected"
        out: "off"

  bs_door_states:
    values:
      - in: "open"
        out: "on"
      - in: "closed"
        out: "off"

  bs_garage_door_states:
    values:
      - in: "open"
        out: "on"
      - in: "closed"
        out: "off"

  bs_gas_states:
    values:
      - in: "(detected|triggered|on)"
        out: "on"
      - in: "clear"
        out: "off"

  bs_heat_states:
    values:
      - in: "hot"
        out: "on"
      - in: "normal"
        out: "off"

  bs_light_states:
    values:
      - in: "detected"
        out: "on"
      - in: "no light"
        out: "off"

  bs_lock_states:
    values:
      - in: "unlocked"
        out: "on"
      - in: "locked"
        out: "off"

  bs_moisture_states:
    values:
      - in: "wet"
        out: "on"
      - in: "dry"
        out: "off"

  bs_motion_states:
    values:
      - in: "(detected|triggered|on)"
        out: "on"
      - in: "clear"
        out: "off"

  bs_occupancy_states:
    values:
      - in: "(detected|triggered|on)"
        out: "on"
      - in: "clear"
        out: "off"

  bs_opening_states:
    values:
      - in: "open"
        out: "on"
      - in: "closed"
        out: "off"

  bs_plug_states:
    values:
      - in: "plugged in"
        out: "on"
      - in: "unplugged"
        out: "off"

  bs_power_states:
    values:
      - in: "(powered[ on]|power detected)"
        out: "on"
      - in: "(not powered|powered off)"
        out: "off"

  bs_presence_states:
    values:
      - in: "(home|present)"
        out: "on"
      - in: "(away|not present)"
        out: "off"

  bs_problem_states:
    values:
      - in: "detected"
        out: "on"
      - in: "ok"
        out: "off"

  bs_running_states:
    values:
      - in: "running"
        out: "on"
      - in: "not running"
        out: "off"

  bs_safety_states:
    values:
      - in: "unsafe"
        out: "on"
      - in: "safe"
        out: "off"

  bs_smoke_states:
    values:
      - in: "(detected|triggered|on)"
        out: "on"
      - in: "clear"
        out: "off"

  bs_sound_states:
    values:
      - in: "(detected|triggered|on)"
        out: "on"
      - in: "clear"
        out: "off"

  bs_tamper_states:
    values:
      - in: "(detected|tampered with)"
        out: "on"
      - in: "clear"
        out: "off"

  bs_update_states:
    values:
      - in: "update available"
        out: "on"
      - in: "(up to date|up-to-date)"
        out: "off"

  bs_vibration_states:
    values:
      - in: "(detected|vibrating)"
        out: "on"
      - in: "(clear|not vibrating)"
        out: "off"

  bs_window_states:
    values:
      - in: "open"
        out: "on"
      - in: "clear"
        out: "closed"

  shopping_list_item:
    wildcard: true

  zone:
    wildcard: true

  position:
    range:
      type: "percentage"
      from: 0
      to: 100

  volume:
    range:
      type: "percentage"
      from: 0
      to: 100

expansion_rules:
  name: "[the] {name}"
  area: "[the] {area}"
  what_is: "(what's|whats|what is)"
  where_is: "(where's|wheres|where is)"
  brightness: "{brightness}[[ ]%| percent]"
  light: "[the] (light|lights|lighting)"
  turn: "(turn|switch|change)"
  temp: "(temp|temperature)"
  temperature: "{temperature}[ ][Â°|degrees][ ][{temperature_unit}]"
  open: "(open|raise)"
  close: "(close|shut|lower)"
  set: "(set|make|change|turn)"
  numeric_value_set: "(set|change|turn|increase|decrease|make)"
  in: "(in|on|at|of)"
  position: "{position}[[ ]%| percent]"
  volume: "{volume:volume_level}[[ ]%| percent]"

  # Questions
  what_is_the_class_of_name: "(<what_is> the <class> (of|in|from|(indicated|measured) by) <name> [in <area>]|<what_is> <name>['s] <class> [in <area>]|<what_is> <area> <name>['s] <class>)"
skip_words:
  - "please"
  - "can you"
