language: en
responses:
  intents:
    HassGetState:
      default: "{{ state.state_with_unit }}" # used mostly for custom sentences

      # the number of names returned is limited to 4, in case there are more, the first 3 names and the remaining count is returned
      # with 4 names or less, the names are joined with a comma ", " and the last name is joined with " and "
      one: |
        {{ slots.name | capitalize }} is {{ state.state_with_unit }}

      one_yesno: |
        {% if query.matched %}
          Yes
        {% else %}
          No, {{ state.state_with_unit }}
        {% endif %}

      any: |
        {% if query.matched %}
          {% set match = query.matched | map(attribute="name") | sort | list %}
          {% if match | length > 4 %}
            Yes, {{ match[:3] | join(", ") }} and {{ (match | length - 3) }} more
          {%- else -%}
            Yes,
            {% for name in match -%}
              {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} and {% endif -%}
              {{ name }}
            {%- endfor -%}
          {% endif %}
        {% else %}
          No
        {% endif %}

      all: |
        {% if not query.unmatched: %}
          Yes
        {% else %}
          {% set no_match = query.unmatched | map(attribute="name") | sort | list %}
          {% if no_match | length > 4 %}
            No, {{ no_match[:3] | join(", ") }} and {{ (no_match | length - 3) }} more are not {{ slots.state }}
          {%- else -%}
            No,
            {% for name in no_match -%}
              {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} and {% endif -%}
              {{ name }}
            {%- endfor %} {% if no_match | length > 1 %}are{% else %}is{% endif %} not {{ slots.state }}
          {% endif %}
        {% endif %}

      which: |
        {% if not query.matched %}
          Not any
        {% else: %}
          {% set match = query.matched | map(attribute="name") | sort | list %}
          {% if match | length > 4 %}
            {{ match[:3] | join(", ") }} and {{ (match | length - 3) }} more
          {% else %}
            {%- for name in match -%}
              {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} and {% endif -%}
              {{ name }}
            {%- endfor -%}
          {% endif %}
        {% endif %}

      how_many: |
        {{ query.matched | length }}

      where: |
        {% if state == "not_home" %}
          {{ slots.name | capitalize }} is away
        {% else %}
          {{ slots.name | capitalize }} is at {{ state.state }}
        {% endif %}
